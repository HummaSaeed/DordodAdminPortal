# Generated by Django 5.0.6 on 2025-03-16 16:20

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certification_license', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('institution', models.CharField(max_length=100)),
                ('effective_date', models.DateField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='certificates/')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_university', models.CharField(max_length=100)),
                ('degree', models.CharField(max_length=100)),
                ('area_of_study', models.CharField(max_length=100)),
                ('degree_completed', models.BooleanField(default=False)),
                ('date_completed', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='FunctionalSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=100)),
                ('proficiency', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='HonorsAwardsPublications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('honor_reward_publication', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('institution', models.CharField(max_length=100)),
                ('issue_date', models.DateField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='honors/')),
            ],
        ),
        migrations.CreateModel(
            name='LanguageSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=50)),
                ('speaking_proficiency', models.CharField(max_length=50)),
                ('writing_proficiency', models.CharField(max_length=50)),
                ('reading_proficiency', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MainGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('spiritual', 'Spiritual Goals'), ('fitness', 'Fitness Goals'), ('family', 'Family Goals'), ('career', 'Career Goals'), ('financial', 'Financial Goals'), ('social', 'Social Goals'), ('intellectual', 'Intellectual Goals')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(max_length=50)),
                ('weightage', models.FloatField(default=1.0)),
            ],
        ),
        migrations.CreateModel(
            name='PreviousExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('company_name', models.CharField(blank=True, max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('job_responsibilities', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('credit_hours', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('instructor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to=settings.AUTH_USER_MODEL)),
                ('purchasers', models.ManyToManyField(related_name='purchased_courses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('resume', 'Resume'), ('cover_letter', 'Cover Letter'), ('portfolio', 'Portfolio'), ('education', 'Educational Document'), ('professional', 'Professional Document'), ('bank', 'Bank Document'), ('other', 'Other Document')], max_length=20)),
                ('document', models.FileField(upload_to='documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GlobalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nationality', models.CharField(default='Not Specified', max_length=100)),
                ('current_location', models.CharField(default='Not Specified', max_length=200)),
                ('languages', models.JSONField(blank=True, default=list)),
                ('time_zone', models.CharField(default='UTC', max_length=50)),
                ('availability', models.CharField(default='Full-time', max_length=200)),
                ('preferred_communication', models.CharField(default='Email', max_length=100)),
                ('social_media_links', models.JSONField(blank=True, default=dict)),
                ('hobbies_interests', models.TextField(default='Not specified')),
                ('volunteer_work', models.TextField(default='None')),
                ('travel_experience', models.TextField(default='None')),
                ('cultural_background', models.TextField(default='Not specified')),
                ('dietary_preferences', models.CharField(default='None', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('health', 'Health & Fitness'), ('learning', 'Learning & Growth'), ('productivity', 'Productivity'), ('mindfulness', 'Mindfulness'), ('social', 'Social & Family'), ('career', 'Career')], max_length=20)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='daily', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('target_value', models.IntegerField(default=1)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('reminder_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('streak', models.IntegerField(default=0)),
                ('last_completed', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('preferred_full_name', models.CharField(blank=True, max_length=60, null=True)),
                ('email', models.EmailField(default='default@example.com', max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('nationality', models.CharField(blank=True, max_length=30, null=True)),
                ('date_of_birth', models.DateField(blank=True, max_length=30, null=True)),
                ('birth_name', models.CharField(blank=True, max_length=30, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=20, null=True)),
                ('suffix', models.CharField(blank=True, max_length=10, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=30, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificates', models.ManyToManyField(blank=True, to='suresh.certificate')),
                ('educations', models.ManyToManyField(blank=True, to='suresh.education')),
                ('functional_skills', models.ManyToManyField(blank=True, to='suresh.functionalskill')),
                ('honors_awards_publications', models.ManyToManyField(blank=True, related_name='professional_informations', to='suresh.honorsawardspublications')),
                ('language_skills', models.ManyToManyField(blank=True, to='suresh.languageskill')),
                ('previous_experiences', models.ManyToManyField(blank=True, to='suresh.previousexperience')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='previousexperience',
            name='professional_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='previous_experience', to='suresh.professionalinformation'),
        ),
        migrations.AddField(
            model_name='languageskill',
            name='professional_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='language_skills_set', to='suresh.professionalinformation'),
        ),
        migrations.AddField(
            model_name='honorsawardspublications',
            name='professional_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='honors_awards_set', to='suresh.professionalinformation'),
        ),
        migrations.AddField(
            model_name='functionalskill',
            name='professional_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='functional_skills_set', to='suresh.professionalinformation'),
        ),
        migrations.AddField(
            model_name='education',
            name='professional_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='educations_set', to='suresh.professionalinformation'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='professional_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='certificates_set', to='suresh.professionalinformation'),
        ),
        migrations.CreateModel(
            name='SubGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(max_length=50)),
                ('required_effort', models.FloatField(default=0)),
                ('spent_effort', models.FloatField(default=0)),
                ('coach', models.CharField(blank=True, max_length=255, null=True)),
                ('accomplishment', models.TextField(blank=True, null=True)),
                ('main_goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subgoals', to='suresh.maingoal')),
            ],
        ),
        migrations.CreateModel(
            name='SwotAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swot_analyses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Strength',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('swot_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strengths', to='suresh.swotanalysis')),
            ],
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('swot_analysis', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='opportunities', to='suresh.swotanalysis')),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=100)),
                ('proficiency', models.CharField(max_length=50)),
                ('professional_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='technical_skills_set', to='suresh.professionalinformation')),
            ],
        ),
        migrations.AddField(
            model_name='professionalinformation',
            name='technical_skills',
            field=models.ManyToManyField(blank=True, to='suresh.technicalskill'),
        ),
        migrations.CreateModel(
            name='Threat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('swot_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threats', to='suresh.swotanalysis')),
            ],
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('reminder_time', models.TimeField(default='09:00')),
                ('dark_mode', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Settings',
            },
        ),
        migrations.CreateModel(
            name='VideoLecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('video_file', models.FileField(upload_to='course_videos/')),
                ('description', models.TextField(blank=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_lectures', to='suresh.course')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('option_a', models.CharField(max_length=255)),
                ('option_b', models.CharField(max_length=255)),
                ('option_c', models.CharField(max_length=255)),
                ('option_d', models.CharField(max_length=255)),
                ('correct_answer', models.CharField(choices=[('A', 'Option A'), ('B', 'Option B'), ('C', 'Option C'), ('D', 'Option D')], max_length=1)),
                ('video_lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='suresh.videolecture')),
            ],
        ),
        migrations.CreateModel(
            name='Weakness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('swot_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weaknesses', to='suresh.swotanalysis')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(blank=True, max_length=100, null=True)),
                ('organization_location', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.CharField(blank=True, max_length=50, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField()),
                ('professional_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences_set', to='suresh.professionalinformation')),
            ],
        ),
        migrations.AddField(
            model_name='professionalinformation',
            name='work_experiences',
            field=models.ManyToManyField(blank=True, related_name='professional_informations', to='suresh.workexperience'),
        ),
        migrations.CreateModel(
            name='WorkItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_type', models.CharField(choices=[('post', 'Post'), ('article', 'Article'), ('video', 'Video'), ('journal', 'Journal')], max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
